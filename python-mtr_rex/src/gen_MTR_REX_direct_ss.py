import jax.numpy as jnp
def gen_spectrum_symbolic(R1a, R2a, dwa, R1b, R2b, k, f, dwb, offset, power, B0, gamma, tp):
    x0 = gamma**2
    x1 = power**2
    x2 = f*k
    x3 = R2a + x2
    x4 = -x3
    x5 = x4**(-1.0)
    x6 = -offset
    x7 = dwa + x6
    x8 = x5*x7
    x9 = -x7
    x10 = B0**2
    x11 = x0*x10
    x12 = x11*x9
    x13 = -x12*x8 - x3
    x14 = x13**(-1.0)
    x15 = R1a + x2
    x16 = x0*x1*x14 - x15
    x17 = x16**(-1.0)
    x18 = k**2
    x19 = f*x18
    x20 = x17*x19
    x21 = x14*x19
    x22 = x4**(-2.0)
    x23 = x22*x7
    x24 = gamma**4
    x25 = x13**(-2.0)
    x26 = x19*x5
    x27 = R2b + k
    x28 = x26 + x27
    x29 = (f*x1*x10*x17*x18*x22*x24*x25*x7*x9 - x12*x21*x23 - x28)**(-1.0)
    x30 = dwb + x6
    x31 = B0*gamma
    x32 = x21*x31
    x33 = x5*x9
    x34 = gamma**3
    x35 = x1*x20*x25*x34
    x36 = B0*x33
    x37 = x29*(-x30*x31 + x32*x33 - x35*x36)
    x38 = B0*x8
    x39 = power*x0
    x40 = x14*x38*x39
    x41 = x20*x40
    x42 = gamma*power
    x43 = x14*x42
    x44 = x20*x43 + x42
    x45 = x37*x41 + x44
    x46 = x30*x31 + x32*x8 - x35*x38
    x47 = (f*x0*x1*x17*x18*x25 - x21 - x27 - x37*x46)**(-1.0)
    x48 = x47*(-x14*x20*x29*x36*x39*x46 - x44)
    x49 = f**2
    x50 = k**4
    x51 = x16**(-2.0)
    x52 = R1b + k
    x53 = R1b*f
    x54 = x10*x24
    x55 = R1a*k**3*x49
    x56 = R1a*x2
    x57 = x17*x56
    x58 = x40*x57
    x59 = x37*x58 + x43*x57
    x60 = (R1a*f*k*x17 - x1*x23*x25*x29*x51*x54*x55*x9 + x48*x59 - x53)/(x1*x10*x22*x24*x25*x29*x49*x50*x51*x7*x9 - x20 - x45*x48 - x52)
    x61 = x47*(-x45*x60 - x59)
    x62 = dwa + offset
    x63 = -x62
    x64 = x11*x62
    x65 = -x3 - x5*x63*x64
    x66 = x65**(-1.0)
    x67 = x0*x1*x66 - x15
    x68 = x67**(-1.0)
    x69 = x19*x68
    x70 = x19*x66
    x71 = x22*x63
    x72 = x65**(-2.0)
    x73 = (f*x1*x10*x18*x22*x24*x62*x63*x68*x72 - x28 - x64*x70*x71)**(-1.0)
    x74 = dwb + offset
    x75 = x31*x66
    x76 = x26*x63
    x77 = x1*x72
    x78 = x34*x77
    x79 = B0*x68
    x80 = x76*x79
    x81 = x73*(-x31*x74 + x75*x76 - x78*x80)
    x82 = x26*x62
    x83 = x79*x82
    x84 = x39*x66
    x85 = x83*x84
    x86 = x42*x66
    x87 = x42 + x69*x86
    x88 = x81*x85 + x87
    x89 = x31*x74 + x75*x82 - x78*x83
    x90 = (f*x0*x1*x18*x68*x72 - x27 - x70 - x81*x89)**(-1.0)
    x91 = x90*(-x73*x80*x84*x89 - x87)
    x92 = x67**(-2.0)
    x93 = x56*x68
    x94 = B0*x39*x5*x62*x66*x93
    x95 = x81*x94 + x86*x93
    x96 = (R1a*f*k*x68 - x53 - x54*x55*x62*x71*x73*x77*x92 + x91*x95)/(x1*x10*x22*x24*x49*x50*x62*x63*x72*x73*x92 - x52 - x69 - x88*x91)
    x97 = x90*(-x88*x96 - x95)
    return x16/(B0*k*power*x0*x14*x29*x5*x9*(x41*x60 - x46*x61 + x58) - R1a - k*x43*x61 - k*x60) - x67/(B0*k*power*x0*x5*x63*x66*x73*(x85*x96 - x89*x97 + x94) - R1a - k*x86*x97 - k*x96)
