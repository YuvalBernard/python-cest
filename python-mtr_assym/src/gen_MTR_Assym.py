import jax.numpy as jnp
def gen_spectrum_symbolic(R1a, R2a, dwa, R1b, R2b, k, f, dwb, offset, power, B0, gamma, tp):
    x0 = gamma**2
    x1 = power**2
    x2 = f*k
    x3 = R2a + x2
    x4 = -x3
    x5 = x4**(-1.0)
    x6 = -offset
    x7 = dwa + x6
    x8 = -x7
    x9 = B0**2
    x10 = x0*x9
    x11 = x10*x7
    x12 = -x11*x5*x8 - x3
    x13 = x12**(-1.0)
    x14 = R1a + x2
    x15 = x0*x1*x13 - x14
    x16 = x15**(-1.0)
    x17 = k**2
    x18 = f*x17
    x19 = x16*x18
    x20 = x4**(-2.0)
    x21 = x13*x18
    x22 = x11*x8
    x23 = gamma**4
    x24 = x12**(-2.0)
    x25 = x18*x5
    x26 = R2b + k
    x27 = x25 + x26
    x28 = (f*x1*x16*x17*x20*x23*x24*x7*x8*x9 - x20*x21*x22 - x27)**(-1.0)
    x29 = dwb + x6
    x30 = -x29
    x31 = B0*gamma
    x32 = x30*x31
    x33 = x13*x25
    x34 = x31*x8
    x35 = gamma**3
    x36 = B0*x16
    x37 = x25*x35*x36
    x38 = x1*x8
    x39 = x28*(-x24*x37*x38 + x32 + x33*x34)
    x40 = power*x0
    x41 = x40*x7
    x42 = x33*x36
    x43 = x41*x42
    x44 = gamma*power
    x45 = x13*x44
    x46 = x19*x45 + x44
    x47 = x39*x43 + x46
    x48 = x29*x31
    x49 = x31*x7
    x50 = x1*x7
    x51 = x24*x50
    x52 = x33*x49 - x37*x51 + x48
    x53 = (f*x0*x1*x16*x17*x24 - x21 - x26 - x39*x52)**(-1.0)
    x54 = x28*x8
    x55 = x53*(-x40*x42*x52*x54 - x46)
    x56 = f**2
    x57 = k**4
    x58 = x15**(-2.0)
    x59 = R1b + k
    x60 = R1b*f
    x61 = x20*x23*x9
    x62 = R1a*k**3*x56
    x63 = R1a*x2
    x64 = x16*x63
    x65 = B0*x13*x41*x5*x64
    x66 = x39*x65 + x45*x64
    x67 = (R1a*f*k*x16 - x51*x54*x58*x61*x62 + x55*x66 - x60)/(x1*x20*x23*x24*x28*x56*x57*x58*x7*x8*x9 - x19 - x47*x55 - x59)
    x68 = x53*(-x47*x67 - x66)
    x69 = x16*(B0*k*power*x0*x13*x28*x5*x8*(x43*x67 - x52*x68 + x65) - R1a - k*x45*x68 - k*x67)
    x70 = dwa + offset
    x71 = x5*x70
    x72 = -x70
    x73 = x10*x72
    x74 = -x3 - x71*x73
    x75 = x74**(-1.0)
    x76 = x0*x1*x75 - x14
    x77 = x76**(-1.0)
    x78 = x18*x77
    x79 = x18*x75
    x80 = x70*x73
    x81 = x74**(-2.0)
    x82 = (f*x1*x17*x20*x23*x70*x72*x77*x81*x9 - x20*x79*x80 - x27)**(-1.0)
    x83 = dwb + offset
    x84 = -x83
    x85 = x31*x84
    x86 = x31*x79
    x87 = x5*x72
    x88 = x1*x35*x78*x81
    x89 = B0*x87
    x90 = x82*(x85 + x86*x87 - x88*x89)
    x91 = B0*x71
    x92 = x40*x75*x91
    x93 = x78*x92
    x94 = x44*x75
    x95 = x44 + x78*x94
    x96 = x90*x93 + x95
    x97 = x31*x83
    x98 = x71*x86 - x88*x91 + x97
    x99 = (f*x0*x1*x17*x77*x81 - x26 - x79 - x90*x98)**(-1.0)
    x100 = x99*(-x40*x75*x78*x82*x89*x98 - x95)
    x101 = x76**(-2.0)
    x102 = x63*x77
    x103 = x102*x92
    x104 = x102*x94 + x103*x90
    x105 = (R1a*f*k*x77 - x1*x101*x61*x62*x70*x72*x81*x82 + x100*x104 - x60)/(x1*x101*x20*x23*x56*x57*x70*x72*x81*x82*x9 - x100*x96 - x59 - x78)
    x106 = x99*(-x104 - x105*x96)
    x107 = x77*(B0*k*power*x0*x5*x72*x75*x82*(x103 + x105*x93 - x106*x98) - R1a - k*x105 - k*x106*x94)
    x108 = x1/x9
    x109 = -R2b
    x110 = R2b**(-1.0)
    x111 = x10*x110
    x112 = x29*x30
    x113 = x109 + x111*x112
    x114 = -R1b + x0*x1/x113
    x115 = R2a*R2b
    x116 = R1a*x115
    x117 = x113*x114
    x118 = -R2a
    x119 = R2a**(-1.0)
    x120 = x118 + x119*x22
    x121 = x115*x120
    x122 = x121*(-R1a + x0*x1/x120)
    x123 = x0*x1
    x124 = x115*(-R1a - x119*x123)
    x125 = -R1b - x110*x123
    x126 = x113*x122
    x127 = x114*x126/(-R1b*x122 - x116*x117 + x117*x121 + x117*x124 + x122*x125 + x126)
    x128 = x127 + x3
    x129 = -x128
    x130 = x129**(-1.0)
    x131 = x130*x18
    x132 = k + x127
    x133 = R2b + x132
    x134 = x131 + x133
    x135 = -x134
    x136 = x10*x112
    x137 = -x133 - x136/x135
    x138 = R1b + x132
    x139 = x0*x1/x137 - x138
    x140 = x127 + x14
    x141 = x129**(-2.0)
    x142 = -x128 - x130*x22
    x143 = x142**(-2.0)
    x144 = x142**(-1.0)
    x145 = x0*x1*x144 - x140
    x146 = x145**(-1.0)
    x147 = x146*x18
    x148 = -x138 - x147
    x149 = x148**(-1.0)
    x150 = x144*x18
    x151 = x134 + x141*x150*x22
    x152 = -f*x1*x141*x143*x146*x17*x23*x7*x8*x9 + x151
    x153 = -x1*x141*x143*x149*x23*x56*x57*x7*x8*x9/x145**2 + x152
    x154 = x129*x142
    x155 = x145*x154
    x156 = x148*x155
    x157 = x144*x147*x44 + x44
    x158 = -x149*x157
    x159 = x133 + x150
    x160 = -f*x0*x1*x143*x146*x17 + x159
    x161 = -x157*x158 - x160
    x162 = x156*x161
    x163 = x0*x1*x130 - x140
    x164 = x163**(-1.0)
    x165 = x164*x18
    x166 = -x138 - x165
    x167 = x130*x165*x44 + x44
    x168 = f*x0*x1*x141*x164*x17 - x134 + x167**2/x166
    x169 = -x159
    x170 = x169**(-1.0)
    x171 = x131*x144
    x172 = x171*x34 + x32
    x173 = x171*x49 + x48
    x174 = -x151 - x170*x172*x173
    x175 = -x160
    x176 = B0*x146
    x177 = x131*x176*x35
    x178 = x143*x177*x38
    x179 = -x143*x177*x50 + x173
    x180 = x171*x176
    x181 = x83*x84
    x182 = x109 + x111*x181
    x183 = -R1b + x0*x1/x182
    x184 = x182*x183
    x185 = x118 + x119*x80
    x186 = x115*x185
    x187 = x186*(-R1a + x0*x1/x185)
    x188 = x182*x187
    x189 = x183*x188/(-R1b*x187 - x116*x184 + x124*x184 + x125*x187 + x184*x186 + x188)
    x190 = x189 + x3
    x191 = -x190
    x192 = x191**(-1.0)
    x193 = x18*x192
    x194 = k + x189
    x195 = R2b + x194
    x196 = x193 + x195
    x197 = -x196
    x198 = x10*x181
    x199 = -x195 - x198/x197
    x200 = R1b + x194
    x201 = x0*x1/x199 - x200
    x202 = x14 + x189
    x203 = x191**(-2.0)
    x204 = -x190 - x192*x80
    x205 = x204**(-2.0)
    x206 = x204**(-1.0)
    x207 = x0*x1*x206 - x202
    x208 = x207**(-1.0)
    x209 = x18*x208
    x210 = -x200 - x209
    x211 = x210**(-1.0)
    x212 = x18*x206
    x213 = x196 + x203*x212*x80
    x214 = -f*x1*x17*x203*x205*x208*x23*x70*x72*x9 + x213
    x215 = -x1*x203*x205*x211*x23*x56*x57*x70*x72*x9/x207**2 + x214
    x216 = x191*x204
    x217 = x207*x216
    x218 = x210*x217
    x219 = x206*x209*x44 + x44
    x220 = -x211*x219
    x221 = x195 + x212
    x222 = -f*x0*x1*x17*x205*x208 + x221
    x223 = -x219*x220 - x222
    x224 = x218*x223
    x225 = x0*x1*x192 - x202
    x226 = x225**(-1.0)
    x227 = x18*x226
    x228 = -x200 - x227
    x229 = x192*x227*x44 + x44
    x230 = f*x0*x1*x17*x203*x226 - x196 + x229**2/x228
    x231 = -x221
    x232 = x231**(-1.0)
    x233 = x193*x70
    x234 = x206*x31
    x235 = x233*x234 + x97
    x236 = x193*x72
    x237 = x234*x236 + x85
    x238 = -x213 - x232*x235*x237
    x239 = -x222
    x240 = B0*x208
    x241 = x233*x240
    x242 = x1*x205*x35
    x243 = x235 - x241*x242
    x244 = x236*x240
    x245 = x242*x244
    x246 = x206*x40
    return x107 - x69 + (-x107 + (x108/x72**2 + 1)**(-1.0))*jnp.exp(tp*(x189 + x224*(-x215 - (x220*x241*x246 + x243)*(B0*f*gamma*x17*x192*x206*x72 + B0*gamma*x84 - x211*x219*x244*x246 - x245)/x223)/(x191*x197*x199*x201*(-x18/x201 - x202) + x191*x225*x228*x230*(-x195 - x198/x230) - x215*x218 + x216*x231*x238*(x0*x1*x232 + x0*x1*x235*x237/(x231**2*x238) - x200) + x217*x239*(-x214 - x243*(x237 - x245)/x239) + x224))) - (-x69 + (x108/x8**2 + 1)**(-1.0))*jnp.exp(tp*(x127 + x162*(-x153 - (x158*x180*x41 + x179)*(B0*f*gamma*x130*x144*x17*x8 + B0*gamma*x30 - x149*x157*x180*x40*x8 - x178)/x161)/(x129*x135*x137*x139*(-x140 - x18/x139) + x129*x163*x166*x168*(-x133 - x136/x168) - x153*x156 + x154*x169*x174*(x0*x1*x170 + x0*x1*x172*x173/(x169**2*x174) - x138) + x155*x175*(-x152 - x179*(x172 - x178)/x175) + x162)))
