import jax.numpy as jnp
def gen_spectrum_symbolic(R1a, R2a, dwa, R1b, R2b, k, f, dwb, offset, power, B0, gamma, tp):
    x0 = gamma**2
    x1 = power**2
    x2 = f*k
    x3 = R2a + x2
    x4 = -x3
    x5 = x4**(-1.0)
    x6 = -offset
    x7 = dwa + x6
    x8 = x5*x7
    x9 = -x7
    x10 = B0**2
    x11 = x0*x10
    x12 = x11*x9
    x13 = -x12*x8 - x3
    x14 = x13**(-1.0)
    x15 = R1a + x2
    x16 = x0*x1*x14 - x15
    x17 = x16**(-1.0)
    x18 = k**2
    x19 = f*x18
    x20 = x17*x19
    x21 = x4**(-2.0)
    x22 = x14*x19
    x23 = x12*x7
    x24 = gamma**4
    x25 = x13**(-2.0)
    x26 = x19*x5
    x27 = R2b + k
    x28 = x26 + x27
    x29 = (f*x1*x10*x17*x18*x21*x24*x25*x7*x9 - x21*x22*x23 - x28)**(-1.0)
    x30 = dwb + x6
    x31 = -x30
    x32 = B0*gamma
    x33 = x31*x32
    x34 = x22*x32
    x35 = x5*x9
    x36 = gamma**3
    x37 = x1*x20*x25*x36
    x38 = B0*x35
    x39 = x29*(x33 + x34*x35 - x37*x38)
    x40 = B0*x8
    x41 = power*x0
    x42 = x14*x40*x41
    x43 = x20*x42
    x44 = gamma*power
    x45 = x14*x44
    x46 = x20*x45 + x44
    x47 = x39*x43 + x46
    x48 = x30*x32
    x49 = x34*x8 - x37*x40 + x48
    x50 = (f*x0*x1*x17*x18*x25 - x22 - x27 - x39*x49)**(-1.0)
    x51 = x50*(-x14*x20*x29*x38*x41*x49 - x46)
    x52 = f**2
    x53 = k**4
    x54 = x16**(-2.0)
    x55 = R1b + k
    x56 = R1b*f
    x57 = x10*x21*x24
    x58 = R1a*k**3*x52
    x59 = R1a*x2
    x60 = x17*x59
    x61 = x42*x60
    x62 = x39*x61 + x45*x60
    x63 = (R1a*f*k*x17 - x1*x25*x29*x54*x57*x58*x7*x9 + x51*x62 - x56)/(x1*x10*x21*x24*x25*x29*x52*x53*x54*x7*x9 - x20 - x47*x51 - x55)
    x64 = x50*(-x47*x63 - x62)
    x65 = x17*(B0*k*power*x0*x14*x29*x5*x9*(x43*x63 - x49*x64 + x61) - R1a - k*x45*x64 - k*x63)
    x66 = x1/x10
    x67 = -R2b
    x68 = R2b**(-1.0)
    x69 = x11*x68
    x70 = x30*x31
    x71 = x67 + x69*x70
    x72 = -R1b + x0*x1/x71
    x73 = x71*x72
    x74 = R2a*R2b
    x75 = R1a*x74
    x76 = -R2a
    x77 = R2a**(-1.0)
    x78 = x23*x77 + x76
    x79 = x74*x78
    x80 = x79*(-R1a + x0*x1/x78)
    x81 = x0*x1
    x82 = x74*(-R1a - x77*x81)
    x83 = -R1b - x68*x81
    x84 = x71*x80
    x85 = x72*x84/(-R1b*x80 - x73*x75 + x73*x79 + x73*x82 + x80*x83 + x84)
    x86 = x3 + x85
    x87 = -x86
    x88 = x87**(-1.0)
    x89 = x19*x88
    x90 = k + x85
    x91 = R2b + x90
    x92 = x89 + x91
    x93 = -x92
    x94 = x11*x70
    x95 = -x91 - x94/x93
    x96 = R1b + x90
    x97 = x0*x1/x95 - x96
    x98 = x15 + x85
    x99 = x87**(-2.0)
    x100 = -x23*x88 - x86
    x101 = x100**(-2.0)
    x102 = x100**(-1.0)
    x103 = x0*x1*x102 - x98
    x104 = x103**(-1.0)
    x105 = x104*x19
    x106 = -x105 - x96
    x107 = x106**(-1.0)
    x108 = x102*x19
    x109 = x108*x23*x99 + x92
    x110 = -f*x1*x10*x101*x104*x18*x24*x7*x9*x99 + x109
    x111 = -x1*x10*x101*x107*x24*x52*x53*x7*x9*x99/x103**2 + x110
    x112 = x100*x87
    x113 = x103*x112
    x114 = x106*x113
    x115 = x102*x105*x44 + x44
    x116 = -x107*x115
    x117 = x108 + x91
    x118 = -f*x0*x1*x101*x104*x18 + x117
    x119 = -x115*x116 - x118
    x120 = x114*x119
    x121 = x0*x1*x88 - x98
    x122 = x121**(-1.0)
    x123 = x122*x19
    x124 = -x123 - x96
    x125 = x123*x44*x88 + x44
    x126 = f*x0*x1*x122*x18*x99 - x92 + x125**2/x124
    x127 = -x117
    x128 = x127**(-1.0)
    x129 = x102*x32
    x130 = x89*x9
    x131 = x129*x130 + x33
    x132 = x7*x89
    x133 = x129*x132 + x48
    x134 = -x109 - x128*x131*x133
    x135 = -x118
    x136 = x1*x101*x36
    x137 = B0*x104
    x138 = x130*x137
    x139 = x136*x138
    x140 = x132*x137
    x141 = x133 - x136*x140
    x142 = x102*x41
    x143 = dwa + offset
    x144 = -x143
    x145 = x11*x143
    x146 = -x144*x145*x5 - x3
    x147 = x146**(-1.0)
    x148 = x0*x1*x147 - x15
    x149 = x148**(-1.0)
    x150 = x149*x19
    x151 = x147*x19
    x152 = x144*x145
    x153 = x146**(-2.0)
    x154 = (f*x1*x10*x143*x144*x149*x153*x18*x21*x24 - x151*x152*x21 - x28)**(-1.0)
    x155 = dwb + offset
    x156 = -x155
    x157 = x156*x32
    x158 = x147*x26
    x159 = x144*x32
    x160 = B0*x149
    x161 = x160*x26*x36
    x162 = x1*x144
    x163 = x154*(-x153*x161*x162 + x157 + x158*x159)
    x164 = x143*x41
    x165 = x158*x160
    x166 = x164*x165
    x167 = x147*x44
    x168 = x150*x167 + x44
    x169 = x163*x166 + x168
    x170 = x155*x32
    x171 = x143*x32
    x172 = x1*x143
    x173 = x153*x172
    x174 = x158*x171 - x161*x173 + x170
    x175 = (f*x0*x1*x149*x153*x18 - x151 - x163*x174 - x27)**(-1.0)
    x176 = x144*x154
    x177 = x175*(-x165*x174*x176*x41 - x168)
    x178 = x148**(-2.0)
    x179 = x149*x59
    x180 = B0*x147*x164*x179*x5
    x181 = x163*x180 + x167*x179
    x182 = (R1a*f*k*x149 - x173*x176*x178*x57*x58 + x177*x181 - x56)/(x1*x10*x143*x144*x153*x154*x178*x21*x24*x52*x53 - x150 - x169*x177 - x55)
    x183 = x175*(-x169*x182 - x181)
    x184 = x149*(B0*k*power*x0*x144*x147*x154*x5*(x166*x182 - x174*x183 + x180) - R1a - k*x167*x183 - k*x182)
    x185 = x155*x156
    x186 = x185*x69 + x67
    x187 = -R1b + x0*x1/x186
    x188 = x186*x187
    x189 = x152*x77 + x76
    x190 = x189*x74
    x191 = x190*(-R1a + x0*x1/x189)
    x192 = x186*x191
    x193 = x187*x192/(-R1b*x191 + x188*x190 - x188*x75 + x188*x82 + x191*x83 + x192)
    x194 = x193 + x3
    x195 = -x194
    x196 = x195**(-1.0)
    x197 = x19*x196
    x198 = k + x193
    x199 = R2b + x198
    x200 = x197 + x199
    x201 = -x200
    x202 = x11*x185
    x203 = -x199 - x202/x201
    x204 = R1b + x198
    x205 = x0*x1/x203 - x204
    x206 = x15 + x193
    x207 = x195**(-2.0)
    x208 = -x152*x196 - x194
    x209 = x208**(-2.0)
    x210 = x208**(-1.0)
    x211 = x0*x1*x210 - x206
    x212 = x211**(-1.0)
    x213 = x19*x212
    x214 = -x204 - x213
    x215 = x214**(-1.0)
    x216 = x19*x210
    x217 = x152*x207*x216 + x200
    x218 = -f*x1*x10*x143*x144*x18*x207*x209*x212*x24 + x217
    x219 = -x1*x10*x143*x144*x207*x209*x215*x24*x52*x53/x211**2 + x218
    x220 = x195*x208
    x221 = x211*x220
    x222 = x214*x221
    x223 = x210*x213*x44 + x44
    x224 = -x215*x223
    x225 = x199 + x216
    x226 = -f*x0*x1*x18*x209*x212 + x225
    x227 = -x223*x224 - x226
    x228 = x222*x227
    x229 = x0*x1*x196 - x206
    x230 = x229**(-1.0)
    x231 = x19*x230
    x232 = -x204 - x231
    x233 = x196*x231*x44 + x44
    x234 = f*x0*x1*x18*x207*x230 - x200 + x233**2/x232
    x235 = -x225
    x236 = x235**(-1.0)
    x237 = x197*x210
    x238 = x170 + x171*x237
    x239 = x157 + x159*x237
    x240 = -x217 - x236*x238*x239
    x241 = -x226
    x242 = B0*x212
    x243 = x197*x242*x36
    x244 = -x172*x209*x243 + x238
    x245 = x162*x209*x243
    x246 = x237*x242
    return (x65 + (-x65 + (x66/x9**2 + 1)**(-1.0))*jnp.exp(tp*(x120*(-x111 - (x116*x140*x142 + x141)*(B0*f*gamma*x102*x18*x88*x9 + B0*gamma*x31 - x107*x115*x138*x142 - x139)/x119)/(-x111*x114 + x112*x127*x134*(x0*x1*x128 + x0*x1*x131*x133/(x127**2*x134) - x96) + x113*x135*(-x110 - x141*(x131 - x139)/x135) + x120 + x121*x124*x126*x87*(-x91 - x94/x126) + x87*x93*x95*x97*(-x19/x97 - x98)) + x85)))**(-1.0) - 1/(x184 + (-x184 + (1 + x66/x144**2)**(-1.0))*jnp.exp(tp*(x193 + x228*(-x219 - (x164*x224*x246 + x244)*(B0*f*gamma*x144*x18*x196*x210 + B0*gamma*x156 - x144*x215*x223*x246*x41 - x245)/x227)/(x195*x201*x203*x205*(-x19/x205 - x206) + x195*x229*x232*x234*(-x199 - x202/x234) - x219*x222 + x220*x235*x240*(x0*x1*x236 + x0*x1*x238*x239/(x235**2*x240) - x204) + x221*x241*(-x218 - x244*(x239 - x245)/x241) + x228))))
