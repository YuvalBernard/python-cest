import jax.numpy as jnp
def gen_spectrum_symbolic(R1a, R2a, dwa, R1b, R2b, k, f, dwb, offset, power, B0, gamma, tp):
    x0 = f*k
    x1 = R2a + x0
    x2 = x1**(-1.0)
    x3 = -offset
    x4 = dwa + x3
    x5 = -x4
    x6 = B0**2
    x7 = gamma**2
    x8 = x6*x7
    x9 = x4*x8
    x10 = x5*x9
    x11 = x1 - x10*x2
    x12 = x11**(-1.0)
    x13 = power**2
    x14 = x13*x7
    x15 = x12*x14
    x16 = R1a + x0
    x17 = -x11
    x18 = x17**(-1.0)
    x19 = -x13*x18*x7 + x16
    x20 = -x19
    x21 = x20**(-1.0)
    x22 = k**2
    x23 = f*x22
    x24 = x21*x23
    x25 = x18*x24
    x26 = x1**(-2.0)
    x27 = x18*x23
    x28 = gamma**4
    x29 = x17**(-2.0)
    x30 = R2b + k
    x31 = -f*x13*x21*x22*x26*x28*x29*x4*x5*x6 - f*x2*x22 + x10*x26*x27 + x30
    x32 = -1/x31
    x33 = x2*x27
    x34 = dwb + x3
    x35 = x32*(f*x13*x2*x21*x22*x29*x5*x7 - x33*x5 - x34)
    x36 = x2*x35*x9
    x37 = x25 + 1
    x38 = -x25*x36 + x37
    x39 = x14*x4
    x40 = x2*x24*x29*x39 - x33*x4 + x34
    x41 = -f*x13*x21*x22*x29*x7 + x27 + x30 + x35*x40*x8
    x42 = -(f*x18*x2*x21*x22*x32*x40*x5*x6*x7 - x37)/x41
    x43 = x13*x28
    x44 = x43*x6
    x45 = x26*x29*x32*x4*x44*x5/x20**2
    x46 = R1b - f**2*k**4*x45 + k + x14*x38*x42 + x24
    x47 = R1a*k
    x48 = x21*x47
    x49 = R1a*f*k**3*x45 + R1b + x14*x18*x42*x48*(x36 - 1) - x48
    x50 = x49/x46
    x51 = x18*x48
    x52 = (-x36*x51 + x38*x49/x46 + x51)/x41
    x53 = x2*x23
    x54 = x12*x4
    x55 = x53*x54
    x56 = x19**(-1.0)
    x57 = x2*x54
    x58 = (R1a - x0*x15*x52 + x0*x50 + x0*x44*x57*(x47*x56*x57 + x50*x55*x56 + x52*(x34 + x55 - x39*x53*x56/x11**2))/x31)/(x15 + x16)
    x59 = offset**2
    x60 = x59*x6
    x61 = -x14
    x62 = x23 + x61
    x63 = -x62
    x64 = R2a**2
    x65 = R2b**2
    x66 = x64*x65
    x67 = R1a*x66
    x68 = power**4*x28
    x69 = R2a*x68
    x70 = B0**4*x28
    x71 = offset**4*x70
    x72 = x14*x64
    x73 = R1a*x72
    x74 = x14*x65
    x75 = R1b*x74
    x76 = 2*R1b
    x77 = R2a*x65
    x78 = x76*x77
    x79 = 2*R2b
    x80 = R1a*R1b
    x81 = x64*x80
    x82 = dwb**2
    x83 = x8*x82
    x84 = x64*x83
    x85 = x60*x7
    x86 = x64*x85
    x87 = dwa**2
    x88 = x8*x87
    x89 = x65*x88
    x90 = x65*x85
    x91 = x44*x87
    x92 = R1a*x91
    x93 = x43*x60
    x94 = R1a*x93
    x95 = x70*x87
    x96 = x82*x95
    x97 = x59*x95
    x98 = x70*x82
    x99 = x59*x98
    x100 = x44*x82
    x101 = R1b*x100
    x102 = R1b*x93
    x103 = 2*dwa
    x104 = offset**3*x70
    x105 = x103*x104
    x106 = 2*R1a
    x107 = dwb*x104
    x108 = dwa*x104*x76
    x109 = x107*x76
    x110 = R1a*R2a
    x111 = R1b*x14
    x112 = R2a*x111
    x113 = 2*offset
    x114 = dwa*x113
    x115 = x114*x8
    x116 = x115*x65
    x117 = x114*x44
    x118 = x114*x98
    x119 = dwb*x113
    x120 = x119*x8
    x121 = x120*x64
    x122 = x119*x95
    x123 = x119*x44
    x124 = R1b*x123
    x125 = dwa*offset
    x126 = x125*x44*x79
    x127 = x110*x76
    x128 = x80*x88
    x129 = x79*x85
    x130 = 4*dwb
    x131 = dwa*x130*x59*x70
    x132 = 4*R2a
    x133 = x132*x80
    x134 = offset*x8
    x135 = dwb*x134
    x136 = 4*R2b*x125*x8
    x137 = -R1a*x105 - R1a*x116 - R1a*x117 - R1a*x118 - R1a*x121 - R1a*x122 + R1a*x131 + R1a*x71 + R1a*x78 + R1a*x84 + R1a*x86 + R1a*x89 + R1a*x90 + R1a*x96 + R1a*x97 + R1a*x99 - R1b*x116 - R1b*x118 - R1b*x121 - R1b*x122 + R1b*x131 + R1b*x66 + R1b*x71 + R1b*x84 + R1b*x86 + R1b*x89 + R1b*x90 + R1b*x96 + R1b*x97 + R1b*x99 + R2a*x100 - R2a*x123 + R2a*x74 + R2a*x93 + R2b*x68 + R2b*x72 + R2b*x91 + R2b*x93 + x101 + x102 - x106*x107 - x108 - x109 + x110*x14*x79 + x112*x79 - x124 - x126 + x127*x83 + x127*x85 + x128*x79 + x129*x80 - x133*x135 - x136*x80 + x67 + x69 + x73 + x75 + x79*x81 + x92 + x94
    x138 = x65*x80
    x139 = -R1a*x108 - R1a*x109 - R1a*x126 + R1b*x67 + R2a*x101 + R2a*x102 - R2a*x124 + R2a*x75 + R2b*x69 + R2b*x73 + R2b*x92 + R2b*x94 - x115*x138 - x118*x80 - x120*x81 - x122*x80 + x131*x80 + x138*x85 + x138*x88 + x71*x80 + x80*x96 + x80*x97 + x80*x99 + x81*x83 + x81*x85
    x140 = x64*x79
    x141 = R2b*x14
    x142 = 2*x14
    x143 = R1a*x85
    x144 = R2a*x106
    x145 = x79*x88
    x146 = R2a*x76
    x147 = (x137 + jnp.sqrt(5)*jnp.sqrt(5*x137**2 - 12*x139*(-R1a*x136 + R1a*x140 + R1a*x141 + R1a*x145 + R1b*x129 - R1b*x132*x135 - R1b*x136 + R1b*x140 + R1b*x145 + R2b*x133 + x100 - x105 + x106*x77 - 2*x107 - x110*x130*x134 + x110*x142 + x111*x79 + x112 - x115*x80 - x116 - x117 - x118 - x120*x80 - x121 - x122 - x123 + x128 + x131 + x132*x141 + x138 + x143*x76 + x143*x79 + x144*x83 + x144*x85 + x146*x83 + x146*x85 + x66 + x68 + x71 + x72 + x74 + x78 + x80*x83 + x81 + x84 + x86 + x89 + x90 + x91 + 2*x93 + x96 + x97 + x99)))**(-1.0)
    x148 = -x139*x147
    x149 = 6*x148
    x150 = k + x149
    x151 = R1b + x150
    x152 = x151*x23
    x153 = x149 + x16
    x154 = R2b + x150
    x155 = x151*x154
    x156 = x154**2
    x157 = -x34
    x158 = x34*x6
    x159 = x157*x158
    x160 = x159*x7
    x161 = -x160
    x162 = x156 + x161
    x163 = x14 + 2*x155 + x162
    x164 = 18*x148
    x165 = x164 + x79
    x166 = 3*k
    x167 = R1b + x166
    x168 = x165 + x167
    x169 = x168*x23
    x170 = -x169
    x171 = -x156
    x172 = x160 + x171
    x173 = -x172
    x174 = x14*x154
    x175 = x151*x173 + x174
    x176 = x152 + x153*x163 + x170 + x175
    x177 = x154*x23
    x178 = x14*x153
    x179 = -x178
    x180 = x177 + x179
    x181 = -x23
    x182 = x153*x168 + x163 + x181
    x183 = x1 + x149
    x184 = x183*x5
    x185 = x184*x9
    x186 = x177 + x185
    x187 = 2*k
    x188 = R2b + x187
    x189 = R1b + x188
    x190 = x16 + x164 + x189
    x191 = x183*x190
    x192 = x14 + x155
    x193 = 12*x148
    x194 = R1b + x193
    x195 = x188 + x194
    x196 = x153*x195
    x197 = x181 + x196
    x198 = x192 + x197
    x199 = x16 + x165 + x187
    x200 = 2*x154
    x201 = x153*x200 + x162
    x202 = x14 + x181
    x203 = x154*x195 + x161 + x192
    x204 = x156 + x160
    x205 = -x142 + x204
    x206 = x205*x23
    x207 = x153**2
    x208 = 2*x23
    x209 = x207 + x208
    x210 = x14*x209
    x211 = x206 - x210
    x212 = 24*x148
    x213 = x167 + x79
    x214 = x212 + x213
    x215 = x16 + x214
    x216 = x153*x175
    x217 = x23*(-x14 + x151**2)
    x218 = x163*x23
    x219 = x152*x168
    x220 = -x216 + x217 + x218 - x219
    x221 = x152 - x195*x23
    x222 = x153*x155 + x221
    x223 = x155 + x197
    x224 = -x14*x151
    x225 = x154*x157
    x226 = x158*x7
    x227 = x225*x226
    x228 = x151*x156 + x195*x7*(x13 - x159) + x224 + x227
    x229 = k + x16 + x194
    x230 = x14*x229 + x154*(x151*x153 - x23) + x224
    x231 = x151*x153 + x154*x229 + x202
    x232 = x153*x173
    x233 = x204*x23
    x234 = x153*x192 + x221
    x235 = x142 + x171
    x236 = x10 + x23
    x237 = x183**2
    x238 = -x14 + x237
    x239 = R1a + R2a + 2*x0
    x240 = x212 + x239
    x241 = x189 + x240
    x242 = dwa + dwb - 2*offset
    x243 = -x242
    x244 = x156 + x226*x243
    x245 = x23*x244
    x246 = x23*x243 + x237*x5
    x247 = x14*x5
    x248 = x246 - x247
    x249 = x245 + x248*x9
    x250 = R2b + x16 + x166 + x212 + x76
    x251 = x14*(x153*x209 + x23*x250)
    x252 = x154*x243 + x184 + x225
    x253 = x154*x244 + x226*x252
    x254 = x23*x252
    x255 = x193 + x239
    x256 = x9*(x13*x255*x5*x7 - x183*x248 - x254)
    x257 = x237 + x62
    x258 = x142 - x208
    x259 = x139*x147
    x260 = 6*x259
    x261 = -x260
    x262 = x1 + x261
    x263 = x16 + x213 - 24*x259
    x264 = x16 + x261
    x265 = x213 - 18*x259
    x266 = x34**2*x8
    x267 = k + x261
    x268 = R2b + x267
    x269 = R1b + x267
    x270 = x266 + x268**2 + 2*x268*x269
    x271 = x264*x265 + x270
    x272 = x142*x268 + x152 - x172*x269 - x174 - x23*x265 + x264*(x14 + x270)
    x273 = x202 + x271
    x274 = -x171 - x226*x242
    x275 = x154*x242 + x154*x34 + x183*x4
    x276 = -dwb + 3*offset - x103
    x277 = x237*x4
    x278 = x23*x242
    x279 = -x13*x4*x7 + x277 + x278
    x280 = -x14*x276 - x154*x275 - x274*x34 - x279
    return x58 + (-x58 + x60/(x13 + x60))*jnp.exp(-tp*(x260 + (x186*(x180 + x262*x273 - x263*x62 + x272) - x23*(-x154*(-x154*x274 + x226*x275) + x226*x280) + x236*(-x176*x183 - x180*x215 - x182*x63 + x206 - x210 - x216 + x217 + x218 - x219) - x249*(x258 + x262*x263 + x271) - x262*(-x180*x273 + x211*x263 + x220*x262 + x23*(x14*x250 - x154*(-x235 - x266) + x200*x266) + x251 + x272*x62) - x9*(f*x22*x280 - x14*(x153*x255*x5 + x23*x276 - x277 - x278 + x39) - x183*(x183*x279 + x23*x275 + x247*x255)) - (-x23*x253 + x256)*(x213 + x239 - 30*x259))/(-x10*x241*x257 - x10*(x14*x255 - x183*x238) - x10*(x13*x255*x7 - x183*x257 - x23*(x1 + x193 + x30)) - x10*(x180 + x183*x198 + x190*x63 + x234) + x154**3*x23 + x176*x63 + x177*(x156 + 3*x160) + x177*(x154*x190 + x161 + x231) + x180*x182 - x183*x220 + x183*(x14*x223 + x14*(x207 + x23) - x178*x190 + x183*x222) + x183*(x154*x169 + x183*x228 - x203*x23 - x23*(x204 + x61)) + x183*(x154*x157*x190*x34*x6*x7 + x154*x230 - x160*x231 - x160*(-x14 - x171)) + x183*(x14*x207 + x180*x199 + x183*x232 + x201*x63 - x233) + x183*(x180*x190 + x183*x234 + x198*x63 + x210 + x23*x235) + x185*(x155 + x191 + x196 + x258) + x186*(x191 + x198) + x186*(x168*x183 + x181 + x203) + x186*(x183*x199 + x201 + x202) + x208*x253 - x211*x215 - x215*x233 - x23*(x13*x250*x7 - x154*x205 - 2*x227) - x23*(x154*x231 - x160*x190 + x227 + x230) - x236*(x170 + x177 + x183*x203 + x228) - x236*(x180 + x183*x201 + x199*x63 + x232) - x236*(x14*x190 + x179 + x183*x223 + x222) - x241*(x10*x238 + x156*x23) - x249*(x187 + x240 + x79) - x251 - x256 + x9*(x183*x246 + x254) - (x1 + x214)*(x245 + x246*x9))))
